iris %>% summarize(mean_Petal=mean(Petal.Length))
library("tidyverse ")
library(tidyverse)
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
# iris %>% summarize(mean_Petal=mean(Petal.Length))
vector <- c(1,3,8,9,11)
mean(vector)
median(vector)
var <- mean(vector^2)-mean(vector)^2
mean(vector^2)-mean(vector)^2
# Exercice 3.1
path <- file.path("data/", "data.csv")
# Exercice 3.1
path <- file.path("data", "data.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("data/", "data.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("./data/", "data.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("./data", "data.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("D:\Ales\2A\S8\Data_collection\R_exercices\data", "data.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("data", "mydata.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("data/", "mydata.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("D:\Ales\2A\S8\Data_collection\R_exercices\data", "mydata.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("~data/", "mydata.csv")
data <- read.csv(path)
# Exercice 3.1
path <- file.path("data/", "mydata.csv")
data <- read.csv(path)
# Exercice 3.2
df1 <- tibble(name=c("Mary","Peter","John","July"),age=c(18,25,21,43))
df2 <- tibble(name=c("Zac","Julian"),age=c(23,48))
df3 <- tibble(size=c(154,178,182,134,142),name1=c("Peter","Mary","July","John","stef"))
summary(diamonds2)
library(tidyverse)
set.seed(1234)
diamonds2 <- diamonds[sample(nrow(diamonds),5000),]
summary(diamonds2)
ggplot(diamonds2)+aes(x=carat)+geom_histogram()
ggplot(diamonds2)+aes(x=carat)+geom_histogram(bins=10)
ggplot(diamonds2)+aes(x=cut)+geom_bar()
#Exercise 2.1
fr_cities <- read.csv("D:/Ales/2A/S8/Data_collection/R_exercices/data/villes_fr.csv")
head(fr_cities)
mygeocode("Paris", "Lyon", "Marseille")
mygeocode("Paris")
mygeocode("Paris")
library(ggmap)
install.packages("ggmap")
library(ggmap)
mygeocode("Paris")
library(ggmap)
mygeocode("Paris")
geocode("Paris")
mygeocode("Paris")
geocode("Paris")
install.packages("flexdashboard")
library(data.table)
df <- as.data.frame(fread("subject101.dat"))
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/data/subject101.dat"))
# Preprocessings
accs <- c("acc_x", "acc_y", "acc_z")
gyrs <- c("gyr_x", "gyr_y", "gyr_z")
magnets <- c("magnet_x", "magnet_y", "magnet_z")
orients <- c("orient_x", "orient_y", "orient_z", "orient_h")
names(df) <- c("timestamp", "activityID", "heart_rate",
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_hand"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_chest"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_ankle"))
colonnes_orients <- which(apply(data, 2, function(x) any(grepl("orients", x))))
colonnes_orients <- grep("orients", names(df))
print(colonnes_orients)
df <- df[, -grep("orients", names(df))]
print(colonnes_orients)
print(df)
View(fr_cities)
View(diamonds2)
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/data/subject101.dat"))
print(df)
# Preprocessings
accs <- c("acc_x", "acc_y", "acc_z")
print(accs)
gyrs <- c("gyr_x", "gyr_y", "gyr_z")
magnets <- c("magnet_x", "magnet_y", "magnet_z")
orients <- c("orient_x", "orient_y", "orient_z", "orient_h")
names(df) <- c("timestamp", "activityID", "heart_rate",
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_hand"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_chest"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_ankle"))
df <- df[, -grep("orients", names(df))]
print(df)
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/data/subject101.dat"))
# Preprocessings
accs <- c("acc_x", "acc_y", "acc_z")
gyrs <- c("gyr_x", "gyr_y", "gyr_z")
magnets <- c("magnet_x", "magnet_y", "magnet_z")
orients <- c("orient_x", "orient_y", "orient_z", "orient_h")
names(df) <- c("timestamp", "activityID", "heart_rate",
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_hand"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_chest"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_ankle"))
dim(df)
names(df)
-grep("orients", names(df))
grep("orient", names(df))
df <- df[, -grep("orient", names(df))]
print(df)
library(data.table)
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/data/subject101.dat"))
# Preprocessings
accs <- c("acc_x", "acc_y", "acc_z")
gyrs <- c("gyr_x", "gyr_y", "gyr_z")
magnets <- c("magnet_x", "magnet_y", "magnet_z")
orients <- c("orient_x", "orient_y", "orient_z", "orient_h")
names(df) <- c("timestamp", "activityID", "heart_rate",
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_hand"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_chest"),
paste0(c("temp", accs, paste0(accs, "_hd"), gyrs, magnets, orients), "_ankle"))
df <- df[, -grep("orient", names(df))]
print(df)
print(c("activity"))
print(c("activityID"))
print(df$activityID)
print(df$activityID)
df$activityID <- factor(df$activityID)
levels(df$activityID) <- c("other", "lying", "sitting", "standing", "walking", "running", "cycling",
"Nordic walking", "ascending stairs", "descending stairs",
"vacuum cleaning", "ironing", "rope jumping")
df$acc_hand <- sqrt(df$acc_x_hand^2 + df$acc_y_hand^2 + df$acc_z_hand^2)
print(df$activityID)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
df$acc_hand <- sqrt(df$acc_x_hand^2 + df$acc_y_hand^2 + df$acc_z_hand^2)
# Resampling
resampling_factor <- 100
df_resampled <- df[seq(from=1, to=nrow(df), by=resampling_factor), ]
# Plots
ggplot(df_resampled, aes(x=timestamp, y=acc_hand, color=activityID)) +
geom_line() + theme_bw() + ggtitle(paste("resampling factor =",
1/resampling_factor))
library(ggplot)
# Plots
ggplot2(df_resampled, aes(x=timestamp, y=acc_hand, color=activityID)) +
geom_line() + theme_bw() + ggtitle(paste("resampling factor =",
1/resampling_factor))
# Plots
ggplot(df_resampled, aes(x=timestamp, y=acc_hand, color=activityID)) +
geom_line() + theme_bw() + ggtitle(paste("resampling factor =",
1/resampling_factor))
library(ggplot2)
# Plots
ggplot(df_resampled, aes(x=timestamp, y=acc_hand, color=activityID)) +
geom_line() + theme_bw() + ggtitle(paste("resampling factor =",
1/resampling_factor))
# Author: Arthur Rubio
# Labwork of visualization with R
# Qu.2
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/drug200/drug200.csv"))
# Author: Arthur Rubio
# Labwork of visualization with R
library(data.table)
library(ggplot2)
# Qu.2
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/drug200/drug200.csv"))
print(df)
print(subset(my_dataframe, select = c)
print(subset(df, select = c)
print(subset(df, select = c())
print(names(df))
names(df)
library(tidyverse)
hist(subset(df, select c =(1))
hist(my_data %>% select(1))
hist(df %>% select(1))
summary(df)
hist(df %>% select(c="Age"))
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
# Qu.2
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/drug200/drug200.csv"))
summary(df)
plot_age <- ggplot(df, aes(x=df$Age)) + geom_histogram() + theme_bw()
plot_sex <- ggplot(df, aes(x=df$Sex)) + geom_bar() + theme_bw()
plot_bp <- ggplot(df, aes(x=df$BP)) + geom_bar() + theme_bw()
plot_cholesterol <- ggplot(df, aes(x=df$Cholesterol)) + geom_bar() + theme_bw()
plot_na_to_k <- ggplot(df, aes(x=df$Na_to_K)) + geom_histogram() + theme_bw()
plot_drug <- ggplot(df, aes(x=df$Drug)) + geom_bar() + theme_bw()
View(plot_sex)
View(plot_sex)
View(plot_sex)
View(plot_sex)
View(plot_sex)
garrange(plot_age, plot_sex, plot_bp,
plot_cholesterol, plot_na_to_k, plot_drug,
nrow=2, ncol=3)
library(ggpubr)
garrange(plot_age, plot_sex, plot_bp,
plot_cholesterol, plot_na_to_k, plot_drug,
nrow=2, ncol=3)
# Author: Arthur Rubio
# Labwork of visualization with R
library(data.table)
library(ggplot2)
library(tidyverse)
library(ggpubr)
# Qu.2
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/drug200/drug200.csv"))
summary(df)
plot_age <- ggplot(df, aes(x=df$Age)) + geom_histogram() + theme_bw()
plot_sex <- ggplot(df, aes(x=df$Sex)) + geom_bar() + theme_bw()
plot_bp <- ggplot(df, aes(x=df$BP)) + geom_bar() + theme_bw()
plot_cholesterol <- ggplot(df, aes(x=df$Cholesterol)) + geom_bar() + theme_bw()
plot_na_to_k <- ggplot(df, aes(x=df$Na_to_K)) + geom_histogram() + theme_bw()
plot_drug <- ggplot(df, aes(x=df$Drug)) + geom_bar() + theme_bw()
garrange(plot_age, plot_sex, plot_bp,
plot_cholesterol, plot_na_to_k, plot_drug,
nrow=2, ncol=3)
install.packages("ggpubr")
# Author: Arthur Rubio
# Labwork of visualization with R
library(data.table)
library(ggplot2)
library(tidyverse)
library(ggpubr)
# Qu.2
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/drug200/drug200.csv"))
summary(df)
# Author: Arthur Rubio
# Labwork of visualization with R
library(data.table)
library(ggplot2)
library(ggpubr)
# Qu.2
df <- as.data.frame(fread("D:/Ales/2A/S8/Data_collection/R_exercices/drug200/drug200.csv"))
summary(df)
plot_age <- ggplot(df, aes(x=df$Age)) + geom_histogram() + theme_bw()
plot_sex <- ggplot(df, aes(x=df$Sex)) + geom_bar() + theme_bw()
plot_bp <- ggplot(df, aes(x=df$BP)) + geom_bar() + theme_bw()
plot_cholesterol <- ggplot(df, aes(x=df$Cholesterol)) + geom_bar() + theme_bw()
plot_na_to_k <- ggplot(df, aes(x=df$Na_to_K)) + geom_histogram() + theme_bw()
plot_drug <- ggplot(df, aes(x=df$Drug)) + geom_bar() + theme_bw()
garrange(plot_age, plot_sex, plot_bp,
plot_cholesterol, plot_na_to_k, plot_drug,
nrow=2, ncol=3)
plot_age <- ggplot(df, aes(x=Age)) + geom_histogram() + theme_bw()
plot_sex <- ggplot(df, aes(x=Sex)) + geom_bar() + theme_bw()
plot_bp <- ggplot(df, aes(x=BP)) + geom_bar() + theme_bw()
plot_cholesterol <- ggplot(df, aes(x=Cholesterol)) + geom_bar() + theme_bw()
plot_na_to_k <- ggplot(df, aes(x=Na_to_K)) + geom_histogram() + theme_bw()
plot_drug <- ggplot(df, aes(x=Drug)) + geom_bar() + theme_bw()
garrange(plot_age, plot_sex, plot_bp,
plot_cholesterol, plot_na_to_k, plot_drug,
nrow=2, ncol=3)
ggarrange(plot_age, plot_sex, plot_bp,
plot_cholesterol, plot_na_to_k, plot_drug,
nrow=2, ncol=3)
summary(df)
df
#Qu.3
typeof(df$Age)
typeof(df$Na_to_K)
help(type.convert)
as.numeric(df$Age)
as.numeric(df&Na_to_K)
as.numeric(df$Na_to_K)
typeof(df$Age)
typeof(df$Na_to_K)
df$BP <- as.character(df$BP)
df$BP[df$BP == "LOW"] <- 1
df$BP[df$BP == "NORMAL"] <- 2
df$BP[df$BP == "HIGH"] <- 3
df$BP <- as.numeric(df$BP)
df$Cholesterol <- as.character(df$Cholesterol)
df$Cholesterol[df$Cholesterol == "NORMAL"] <- 1
df$Cholesterol[df$Cholesterol == "HIGH"] <- 2
df$Cholesterol <- as.numeric(df$Cholesterol)
df$Sex <- as.character(df$Sex)
df$Sex[df$Sex == "F"] <- 1
df$Sex[df$Sex == "M"] <- 0
df$Sex <- as.numeric(df$Sex)
summary(df)
#Qu.4
cor(subset(df, select=-Drug), method="spearman")
install.packages("reshape2")
library(reshape2)
cor(subset(df, select=-Drug), method="spearman")
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
cormat <- round(cor(subset(df, select=-Drug), method="spearman"), 2)
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm=T)
ggplot(melted_cormat, aes(Var2, Var1, fill=value))+
geom_tile(color="white")+
scale_fill_gradient2(low="blue", high="red", mid="white",
midpoint=0, limit=c(-0.2, 1), space="Lab",
name="Spearman\nCorrelation") +
theme_minimal() +
coord_fixed() +
geom_text(aes(Var2, Var1, label=value), color="black", size=4) +
theme(
axis.text.x=element_text(angle=45, vjust=1, size=12, hjust=1),
axis.text.y=element_text(size=12),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position=c(0.3, 0.8),
legend.direction="horizontal") +
guides(fill=guide_colorbar(barwidth=12, barheight=1, title.position="top", title.hjust=0.5))
library(rpart)
install.packages("rpart")
library(rpart)
nrun <- 100
accuracies <- c()
for (irun in 1:nrun){
df <- df[sample(nrow(df)), ]
train <- df[1:175, ]
test <- df[176:200, ]
tree <- rpart(Drug ~ ., train)
preds_dummy <- rep("drugY", nrow(test))
preds_tree <- predict(tree, test, type="class")
acc_dummy <- mean(preds_dummy == test$Drug)
acc_tree <- mean(preds_tree == test$Drug)
accuracies <- rbind(accuracies, c(acc_dummy, acc_tree))
}
colnames(accuracies) <- c("dummy", "tree")
boxplot(accuracies)
tree_global <- rpart(Drug ~ ., df)
plot(tree_global)
text(tree_global)
rpart.plot(tree_global)
plot(tree_global)
text(tree_global)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(tree_global)
prp(tree_global, extra=2)
---
title: "Themed dashboard"
library(flexdashboard)
library(rsconnect)
library(shiny)
detach("package:rsconnect", unload = TRUE)
detach("package:shiny", unload = TRUE)
library(shiny)
library(rsconnect)
detach("package:rsconnect", unload = TRUE)
detach("package:shiny", unload = TRUE)
library(shiny)
library(rsconnect)
rsconnect::deployApp()
install.packages("shiny")
install.packages("rsconnect")
rsconnect::deployApp()
install.packages("flexdashboard")
install.packages("flexdashboard")
install.packages("flexdashboard")
install.packages("flexdashboard")
install.packages("flexdashboard")
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp(appMode = "shiny")
rsconnect::deployApp(appMode = "shiny")
rsconnect::deployApp(appDir = getwd(), appMode = "shiny")
rsconnect::deployApp(appDir = "D:/Ales/2A/S8/R_D/Code/Autonomous-Driving", appMode = "shiny")
install.packages("magick")
library(magick)
shiny::runApp('D:/Ales/2A/S8/R_D/Code/Autonomous-Driving')
shiny::runApp('D:/Ales/2A/S8/R_D/Code/Autonomous-Driving')
runApp('D:/Ales/2A/S8/R_D/Code/Autonomous-Driving')
runApp('D:/Ales/2A/S8/R_D/Code/Autonomous-Driving')
runApp('D:/Ales/2A/S8/R_D/Code/Autonomous-Driving')
